kubectl version
minikube version

# creating a virtual machine in mac system using hyperkit
minikube start --vm-driver=hyperkit
# running the above command gave me issue but by turning of the internet sharing was solved


# get status of the nodes
kubectl get nodes

minikube status

kubectl get pod

kubectl get services

# it shows what we can do with this command 
kubectl create -h

# deploy nginx
kubectl create deployment nginx-depl --image=nginx
kubectl get deployment # this is usually the container itself 
kubectl get pod # this is usually a replica or an abstraction of the container

# managing replica of a pod
kubectl get replicaset

# edit
kubectl edit deployment nginx-depl

kubectl logs [pod_name]

kubectl describe pod [pod_name]

# running a pod in the interactive mode in terminal and this command take you inside that 
# particular container
kubectl exec -it [pod_name] -- bin/bash


# To delete a deployment or a pod
kubectl delete deployment [deployment_name]

# create or edit config file
vim nginx-deployment.yaml
kubectl apply -f nginx-deployment.yaml
kubectl get pod
kubectl get deployment

# delete with config
kubectl delete -f nginx-deployment.yaml

# The kubectl top command returns current CPU and memory usage for a clusterâ€™s pods or nodes, or for a particular pod or node if specified.
kubectl top 

# to get the status of deployment or pod from etcd (where the metadata is stored)
kubectl get deployment nginx-deployment -o yml > nginx_deployment_result

# to delete using the config files 
kubectl delete -f nginx-service.yml

# to get additional information
kubectl get pod -o wide

# to run the cluster
(base) arifmoazy@Arifs-MBP beginner_demo_project % kubectl get services                        
NAME                    TYPE           CLUSTER-IP     EXTERNAL-IP   PORT(S)          AGE
kubernetes              ClusterIP      10.96.0.1      <none>        443/TCP          9h
mongo-express-service   LoadBalancer   10.104.78.40   <pending>     8081:30000/TCP   10m
mongodb-service         ClusterIP      10.98.180.8    <none>        27017/TCP        41m
(base) arifmoazy@Arifs-MBP beginner_demo_project % minikube service mongo-express-service
|-----------|-----------------------|-------------|---------------------------|
| NAMESPACE |         NAME          | TARGET PORT |            URL            |
|-----------|-----------------------|-------------|---------------------------|
| default   | mongo-express-service |        8081 | http://192.168.64.2:30000 |
|-----------|-----------------------|-------------|---------------------------|
ðŸŽ‰  Opening service default/mongo-express-service in default browser...
(base) arifmoazy@Arifs-MBP beginner_demo_project % kubectl get services                  
NAME                    TYPE           CLUSTER-IP     EXTERNAL-IP   PORT(S)          AGE
kubernetes              ClusterIP      10.96.0.1      <none>        443/TCP          9h
mongo-express-service   LoadBalancer   10.104.78.40   <pending>     8081:30000/TCP   13m
mongodb-service         ClusterIP      10.98.180.8    <none>        27017/TCP        44m


------
kubectl create namespace <namespace_name>

kubectl get namespace 

# list out all of the spaces
kubens

# switch to different namespace
kubens namespace_name
# after switching to a different namespace then we do not need to space in every command --namespace

# installing or enabling the Ingress controller in minikube
minikube addons enable ingress

-----------

# if you run:
kubectl get ns # ns stands for namespace
# and you do not see the kubernetes-dashboard then runt:
minikube addons list
# if you see that dashboard is disabled then activate by:
minikube addons enable dashboard
# then you can get the url:
minikube dashboard --url
# running above provide a link and give you the whole overview of your kubernetes cluster
(base) arifmoazy@Arifs-MBP kubernetes_microservice_architecture % kubectl get all -n kubernetes-dashboard
NAME                                            READY   STATUS    RESTARTS   AGE
pod/dashboard-metrics-scraper-c5db448b4-4555d   1/1     Running   0          3m54s
pod/kubernetes-dashboard-695b96c756-lcpqm       1/1     Running   0          3m54s

NAME                                TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)    AGE
service/dashboard-metrics-scraper   ClusterIP   10.111.61.162   <none>        8000/TCP   3m54s
service/kubernetes-dashboard        ClusterIP   10.105.19.242   <none>        80/TCP     3m54s

NAME                                        READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/dashboard-metrics-scraper   1/1     1            1           3m55s
deployment.apps/kubernetes-dashboard        1/1     1            1           3m55s

NAME                                                  DESIRED   CURRENT   READY   AGE
replicaset.apps/dashboard-metrics-scraper-c5db448b4   1         1         1       3m55s
replicaset.apps/kubernetes-dashboard-695b96c756       1         1         1       3m55s


------------
(base) arifmoazy@Arifs-MBP kubernetes_microservice_architecture % kubectl get ns                
NAME                   STATUS   AGE
default                Active   24h
dev-space              Active   12h
ingress-nginx          Active   90s
kube-node-lease        Active   24h
kube-public            Active   24h
kube-system            Active   24h
kubernetes-dashboard   Active   40m
(base) arifmoazy@Arifs-MBP kubernetes_microservice_architecture % cd config 
(base) arifmoazy@Arifs-MBP config % ls
dashboard_ingress.yml           info.txt                        nginx_deployment.yml            nginx_deployment_result.yml     nginx_service.yml
(base) arifmoazy@Arifs-MBP config % kubectl apply -f dashboard_ingress.yml 
ingress.networking.k8s.io/dashboard-ingress created
(base) arifmoazy@Arifs-MBP config % kubectl get ingress -n kubernetes-dashboard
NAME                CLASS   HOSTS           ADDRESS        PORTS   AGE
dashboard-ingress   nginx   dashboard.com   192.168.64.2   80      77s
(base) arifmoazy@Arifs-MBP config % sudo vim /etc/hosts

# Above I did add the ip address of dashboard-ingress (192.168.64.2) to /etc/hosts and referenced to 
# dashboard_ingress.yml file (host: customdashboard.com)
# in browser I did enter customdashboard.com and got the kubernetes dashboard

---------------










